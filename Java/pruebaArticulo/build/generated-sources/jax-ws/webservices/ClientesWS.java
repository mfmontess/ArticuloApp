
package webservices;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ClientesWS", targetNamespace = "http://WebServices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ClientesWS {


    /**
     * 
     * @param cliente
     * @return
     *     returns webservices.RespuestaWS
     */
    @WebMethod(operationName = "ActualizarCliente")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ActualizarCliente", targetNamespace = "http://WebServices/", className = "webservices.ActualizarCliente")
    @ResponseWrapper(localName = "ActualizarClienteResponse", targetNamespace = "http://WebServices/", className = "webservices.ActualizarClienteResponse")
    @Action(input = "http://WebServices/ClientesWS/ActualizarClienteRequest", output = "http://WebServices/ClientesWS/ActualizarClienteResponse")
    public RespuestaWS actualizarCliente(
        @WebParam(name = "cliente", targetNamespace = "")
        Cliente cliente);

    /**
     * 
     * @param usuarioId
     * @return
     *     returns webservices.RespuestaWS
     */
    @WebMethod(operationName = "ObtenerClientePorUsuarioId")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ObtenerClientePorUsuarioId", targetNamespace = "http://WebServices/", className = "webservices.ObtenerClientePorUsuarioId")
    @ResponseWrapper(localName = "ObtenerClientePorUsuarioIdResponse", targetNamespace = "http://WebServices/", className = "webservices.ObtenerClientePorUsuarioIdResponse")
    @Action(input = "http://WebServices/ClientesWS/ObtenerClientePorUsuarioIdRequest", output = "http://WebServices/ClientesWS/ObtenerClientePorUsuarioIdResponse")
    public RespuestaWS obtenerClientePorUsuarioId(
        @WebParam(name = "usuarioId", targetNamespace = "")
        int usuarioId);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://WebServices/", className = "webservices.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://WebServices/", className = "webservices.HelloResponse")
    @Action(input = "http://WebServices/ClientesWS/helloRequest", output = "http://WebServices/ClientesWS/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param cliente
     * @return
     *     returns webservices.RespuestaWS
     */
    @WebMethod(operationName = "RegistrarCliente")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "RegistrarCliente", targetNamespace = "http://WebServices/", className = "webservices.RegistrarCliente")
    @ResponseWrapper(localName = "RegistrarClienteResponse", targetNamespace = "http://WebServices/", className = "webservices.RegistrarClienteResponse")
    @Action(input = "http://WebServices/ClientesWS/RegistrarClienteRequest", output = "http://WebServices/ClientesWS/RegistrarClienteResponse")
    public RespuestaWS registrarCliente(
        @WebParam(name = "cliente", targetNamespace = "")
        Cliente cliente);

}
